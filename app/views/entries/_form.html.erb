<%= content_tag(:div, "", id: 'journal-year', data: {source: @journal.year}) %>
<%= hidden_field_tag :journal_blocked_to, @journal.blocked_to %>

<%= form_for(@entry) do |f| %>
  <%= f.hidden_field :referer, { value: @referer } %>
  <% if @entry.errors.any? %>
    <div id="error_explanation">
      <h2>Wystąpiły błędy podczas próby zapisu:</h2>

      <ul>
      <% @entry.errors.full_messages.each do |msg| %>
        <li><%= msg %></li>
      <% end %>
      </ul>
    </div>
  <% end %>

  <div class="row">
    <div class="col-md-6">
      <div class="well">
        <div class="row">
          <div class="col-md-3">
            <%= f.label :data %>
            <%= f.text_field :date, class: "form-control" %>
          </div>
          <div class="col-md-6 col-md-offset-3">
            <%= f.label :Numer_dokumentu %>
            <%= f.text_field :document_number, class: "form-control" %>
          </div>
        </div>
        <div class="row top-buffer-20">
          <div class="col-md-12">
            <%= f.label :Opis %>
            <%= f.text_field :name, class: "form-control" %>
          </div>
        </div>
        
        <div class="row top-buffer-20">
          <div class="col-md-12">
            <label>Typ wpisu:</label>
            <div class="radio">
              <%= f.radio_button :is_expense, false, id: "entry_type_income", onclick: "handleEntryTypeChange(false)" %>
              <%= f.label :is_expense, "Wpływ", value: false, for: "entry_type_income" %>
            </div>
            <div class="radio">
              <%= f.radio_button :is_expense, true, id: "entry_type_expense", onclick: "handleEntryTypeChange(true)" %>
              <%= f.label :is_expense, "Wydatek", value: true, for: "entry_type_expense" %>
            </div>
          </div>
        </div>
      </div>

    </div>

    <div class="col-md-12" id="categories-container">
      <%= f.fields_for :items, @sorted_items do |item_fields| %>
        <div class="row top-buffer-20">
          <% category_name = item_fields.object.category.name %>

          <div class="col-md-2">
            <% #item amount %>
            <%= item_fields.label :amount, category_name %>
            <%= item_fields.text_field :amount, :class=>"category form-control" %>
          </div>

          <% if @entry.is_expense then %>
            <div class="col-md-2">
              <% #item amount one percent %>
              <%= item_fields.label :amount_one_percent, "w tym 1%" %>
              <%= item_fields.text_field :amount_one_percent, :class=>"category form-control" %>
            </div>

            <% print_item_grants_form(item_fields) %>

          <% end %>
          <%= item_fields.hidden_field :category_id, :class=>"category_id"%>
        </div>
      <% end %>

      <%= f.hidden_field :journal_id, :value => @journal.id %>
    </div>

    <!%-- przenoszenie kwot miedzy ksiazkami na razie wstrzymane --%>
    <% if false && @entry.is_expense %>
      <div class="col-md-6">
        <%= check_box_tag :is_linked, :is_linked, @linked_entry.id, :onclick => "showOrHideLinkedEntry()" %>
        <label for="is_linked">Przenieś do innej książki</label>

        <div id="linked_entry_div">
          <%= fields_for :linked_entry, @linked_entry do |linked_entry| %>
            <%= linked_entry.select :journal_id, options_from_collection_for_select(@other_journals, "id", "journal_type")%>

            <%= linked_entry.fields_for :items do |linked_item_fields| %>
              <%= linked_item_fields.label :amount, linked_item_fields.object.category.name %>
              <%= linked_item_fields.text_field :amount, :class=>"category" %>
              <%= linked_item_fields.hidden_field :category_id, :value => linked_item_fields.object.category.id %>
            <% end %>
          <% end %>
        </div>
      </div>
    <% end %>
  </div>

  <div class="row top-buffer-20">
    <div class="col-md-12">
      <%= f.submit "Zapisz", class: "btn btn-sm btn-success"%>
    </div>
  </div>
<% end %>
<script type="text/JavaScript">
  showOrHideLinkedEntry();
  
  function handleEntryTypeChange(isExpense) {
    // Oblicz sumę wszystkich wartości we wpisie
    let currentTotalAmount = calculateTotalAmount();
    
    // Pobierz obecne wartości formularza
    const date = document.getElementById('entry_date').value;
    const documentNumber = document.getElementById('entry_document_number').value;
    const name = document.getElementById('entry_name').value;
    
    // Zapisz aktualny stan formularza przed zmianą
    const formData = {
      date: date,
      documentNumber: documentNumber,
      name: name,
      amount: currentTotalAmount,
      isExpense: isExpense
    };
    
    // Zapisz dane w localStorage
    localStorage.setItem('entryTypeChangeData', JSON.stringify(formData));
    
    // Przekieruj do odpowiedniego formularza edycji z zachowaniem ID wpisu
    const entryId = window.location.pathname.split('/')[2];
    const journalId = <%= @journal.id %>;
    
    // Odśwież stronę, aby pokazać właściwe kategorie
    window.location.href = `/entries/${entryId}/edit?type_changed=true`;
  }
  
  // Funkcja obliczająca łączną sumę wszystkich kategorii
  function calculateTotalAmount() {
    let totalAmount = 0;
    const amountFields = document.querySelectorAll('input.category');
    
    for (let i = 0; i < amountFields.length; i++) {
      const value = parseFloat(amountFields[i].value) || 0;
      if (value > 0) {
        totalAmount += value;
      }
    }
    
    return totalAmount;
  }
  
  // Po załadowaniu strony sprawdź, czy właśnie zmieniono typ wpisu
  document.addEventListener('DOMContentLoaded', function() {
    // Ustaw odpowiedni przycisk radiowy na podstawie wartości is_expense
    const isExpense = <%= @entry.is_expense ? 'true' : 'false' %>;
    if (isExpense) {
      document.getElementById('entry_type_expense').checked = true;
    } else {
      document.getElementById('entry_type_income').checked = true;
    }
    
    const urlParams = new URLSearchParams(window.location.search);
    const typeChanged = urlParams.get('type_changed');
    
    if (typeChanged) {
      const savedData = JSON.parse(localStorage.getItem('entryTypeChangeData'));
      if (savedData) {
        // Ustaw zapisane wartości w formularzu
        document.getElementById('entry_date').value = savedData.date;
        document.getElementById('entry_document_number').value = savedData.documentNumber;
        document.getElementById('entry_name').value = savedData.name;
        
        // Ustaw pierwszą kategorię na zapisaną kwotę
        const firstCategory = document.querySelector('input.category');
        if (firstCategory) {
          firstCategory.value = savedData.amount;
        }
        
        // Wyczyść zapisane dane
        localStorage.removeItem('entryTypeChangeData');
        
        // Pokaż komunikat informujący o zmianie typu wpisu
        const alertDiv = document.createElement('div');
        alertDiv.className = 'alert alert-info';
        alertDiv.role = 'alert';
        alertDiv.innerHTML = `Zmieniono typ wpisu na <strong>${savedData.isExpense ? 'wydatek' : 'wpływ'}</strong>. Łączna kwota została przeniesiona do pierwszej kategorii. Zapisz zmiany, aby zatwierdzić.`;
        
        const formContainer = document.querySelector('form');
        formContainer.insertBefore(alertDiv, formContainer.firstChild);
      }
    }
  });
</script>
